<?php

/**
 * @file
 * product_canvas install schema.
 */

/**
 * Implements hook_schema().
 */
function product_canvas_schema() {
  $schema = array();

  $schema['product_canvas'] = array(
    'description' => 'The base table for Product Canvas entities.',
    'fields' => array(
      'product_canvas_id' => array(
        'description' => 'Primary Key: Identifier for a Product Canvas.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The type of this Product Canvas.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'label' => array(
        'description' => 'The name of the Product Canvas - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the Product Canvas was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the Product Canvas was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('product_canvas_id'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  $schema['product_canvas_type'] = array(
    'description' => 'Stores information about defined Product Canvas types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique Product Canvas type identifier.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this Product Canvas type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this Product Canvas type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this Product Canvas type in relation to others.',
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  return $schema;
}

 
// Create the array of information about the fields we want to create.
function _product_canvas_field_data() {
  $fields = array();
  // Paste $fields data from devel ouput here.
$fields['field_saved_images'] = array(
  'entity_types' => array(),
  'indexes' => array(
    'fid' => array(
      'fid',
    ),
  ),
  'settings' => array(
    'uri_scheme' => 'public',
    'default_image' => 0,
  ),
  'translatable' => '0',
  'storage' => array(
    'type' => 'field_sql_storage',
    'settings' => array(),
    'module' => 'field_sql_storage',
    'active' => '1',
    'details' => array(
      'sql' => array(
        'FIELD_LOAD_CURRENT' => array(
          'field_data_field_saved_images' => array(
            'fid' => 'field_saved_images_fid',
            'alt' => 'field_saved_images_alt',
            'title' => 'field_saved_images_title',
            'width' => 'field_saved_images_width',
            'height' => 'field_saved_images_height',
          ),
        ),
        'FIELD_LOAD_REVISION' => array(
          'field_revision_field_saved_images' => array(
            'fid' => 'field_saved_images_fid',
            'alt' => 'field_saved_images_alt',
            'title' => 'field_saved_images_title',
            'width' => 'field_saved_images_width',
            'height' => 'field_saved_images_height',
          ),
        ),
      ),
    ),
  ),
  'foreign keys' => array(
    'fid' => array(
      'table' => 'file_managed',
      'columns' => array(
        'fid' => 'fid',
      ),
    ),
  ),
  'field_name' => 'field_saved_images',
  'type' => 'image',
  'module' => 'image',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '-1',
  'deleted' => '0',
  'columns' => array(
    'fid' => array(
      'description' => 'The {file_managed}.fid being referenced in this field.',
      'type' => 'int',
      'not null' => FALSE,
      'unsigned' => TRUE,
    ),
    'alt' => array(
      'description' => "Alternative image text, for the image's 'alt' attribute.",
      'type' => 'varchar',
      'length' => 512,
      'not null' => FALSE,
    ),
    'title' => array(
      'description' => "Image title text, for the image's 'title' attribute.",
      'type' => 'varchar',
      'length' => 1024,
      'not null' => FALSE,
    ),
    'width' => array(
      'description' => 'The width of the image in pixels.',
      'type' => 'int',
      'unsigned' => TRUE,
    ),
    'height' => array(
      'description' => 'The height of the image in pixels.',
      'type' => 'int',
      'unsigned' => TRUE,
    ),
  ),
  'bundles' => array(
    'commerce_product' => array(
      'product',
    ),
    'product_canvas' => array(
      'canvas_type',
    ),
  ),
);

  return $fields;
  }
  
// Create the array of information about the instances we want to create.
function _product_canvas_instance_data() {
  $instances = array();
  // Paste $instances data from devel output here.
  $instances['field_saved_images'] = array(
  'label' => 'Images',
  'widget' => array(
    'weight' => '2',
    'type' => 'image_image',
    'module' => 'image',
    'active' => 1,
    'settings' => array(
      'progress_indicator' => 'throbber',
      'preview_image_style' => 'medium',
    ),
  ),
  'settings' => array(
    'file_directory' => '',
    'file_extensions' => 'png gif jpg jpeg',
    'max_filesize' => '',
    'max_resolution' => '',
    'min_resolution' => '',
    'alt_field' => 0,
    'title_field' => 0,
    'default_image' => 0,
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'above',
      'type' => 'image',
      'settings' => array(
        'image_style' => '',
        'image_link' => '',
      ),
      'module' => 'image',
      'weight' => 0,
    ),
    'token' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => '',
  'fences_wrapper' => '',
  'field_name' => 'field_saved_images',
  'entity_type' => 'product_canvas',
  'bundle' => 'canvas_type',
  'deleted' => '0',
);
  
  return $instances;
}

function product_canvas_install() {

  // Create all the fields we are adding to our entity type.
  // http://api.drupal.org/api/function/field_create_field/7
  foreach (_product_canvas_field_data() as $field) {
    field_create_field($field);
  }

  // Create all the instances for our fields.
  // http://api.drupal.org/api/function/field_create_instance/7
  foreach (_product_canvas_instance_data() as $instance) {
    field_create_instance($instance);
  }
}




function product_canvas_uninstall() {
  foreach (_product_canvas_field_data() as $field_name => $properties) {
    field_delete_field($field_name);
  }
  field_purge_batch(1000);
}
